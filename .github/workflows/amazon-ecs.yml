name: Amazon ECS

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  deploy:
    name: Amazon ECS
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Check out GitHub repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, push Docker image to Amazon ECR
        run: |
          docker build -t ${{ steps.ecr-login.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ secrets.AWS_ECR_IMAGE_TAG }} -f ${{ secrets.DOCKERFILE }} .
          docker push ${{ steps.ecr-login.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ secrets.AWS_ECR_IMAGE_TAG }}

      - name: Clean up Amazon ECR
        run: ./script/amazon-ecr-cleaner.sh
        env:
          AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}

      - name: Render Amazon ECS task definition
        id: web-container-rendering
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ secrets.AWS_ECS_TASK_DEFINITION }}
          container-name: ${{ secrets.AWS_ECS_CONTAINER_NAME }}
          image: ${{ steps.ecr-login.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ secrets.AWS_ECR_IMAGE_TAG }}

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.web-container-rendering.outputs.task-definition }}
          service: ${{ secrets.AWS_ECS_SERVICE }}
          cluster: ${{ secrets.AWS_ECS_CLUSTER }}